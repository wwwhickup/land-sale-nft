{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "tsconfigRootDir": "./",
    "project": ["tsconfig.json"],
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "remix"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "env": {
    "node": true
  },
  "rules": {
    "@typescript-eslint/no-explicit-any": 1,
    "eqeqeq": 1,
    "@typescript-eslint/ban-ts-comment": 0,
    "require-jsdoc": 0,
    "valid-jsdoc": 0,
    // note you must disable the base rule as it can report incorrect errors
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "import/prefer-default-export": 0,
    "@typescript-eslint/no-use-before-define": 0,
    "global-require": 0,
    "no-underscore-dangle": 0,
    "no-restricted-syntax": [ 
      "error", 
      { 
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array." 
      }, 
      { 
        "selector": "LabeledStatement", 
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      }, 
      { 
        "selector": "WithStatement", 
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ]
  }
}